name: LuCI编译-Matrix（OpenWRT 24.10.2）

on:
  workflow_dispatch:
    inputs:
      verbose:
        description: '是否输出详细编译日志（V=s）'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'
  # push:
  #   paths:
  #     - 'luci-app-*/**'

jobs:
  detect:
    runs-on: ubuntu-22.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.pkg_matrix }}
    steps:
      - name: 1️⃣ Checkout 仓库
        uses: actions/checkout@v4

      - name: 2️⃣ 识别 luci-app-* 包
        id: set-matrix
        run: |
          echo "📦 正在识别 luci-app-* 包..."
          PKG_LIST=$(find . -maxdepth 1 -type d -name "luci-app-*")
          MATRIX_JSON="{\"pkg\":["

          FIRST=true
          for PKG in $PKG_LIST; do
            PKG_NAME=$(basename "$PKG")
            if [ "$PKG_NAME" = "luci-app-hello" ]; then
              echo "🚫 跳过默认包：$PKG_NAME"
              continue
            fi
            if [ "$FIRST" = true ]; then
              FIRST=false
            else
              MATRIX_JSON+=","
            fi
            MATRIX_JSON+="\"$PKG_NAME\""
          done
          MATRIX_JSON+="]}"
          echo "✅ Matrix JSON: $MATRIX_JSON"
          echo "pkg_matrix=$MATRIX_JSON" >> $GITHUB_OUTPUT

  build:
    needs: detect
    runs-on: ubuntu-22.04
    strategy:
      matrix: ${{ fromJson(needs.detect.outputs.matrix) }}
    name: 编译 ${{ matrix.pkg }}
    steps:
      - name: 1️⃣ Checkout 仓库
        uses: actions/checkout@v4

      - name: 2️⃣ 安装依赖
        run: |
          sudo apt update -y || true
          sudo apt install -y \
            build-essential git wget tar zstd xz-utils \
            python3 python3-dev python3-setuptools swig

      - name: 3️⃣ 下载并解压 OpenWRT SDK
        run: |
          RUNNER_HOME="/home/runner"
          SDK_URL="https://downloads.openwrt.org/releases/24.10.2/targets/mediatek/filogic/openwrt-sdk-24.10.2-mediatek-filogic_gcc-13.3.0_musl.Linux-x86_64.tar.zst"
          SDK_TAR="openwrt-sdk-24.10.2.tar.zst"
          SDK_DIR="$RUNNER_HOME/openwrt-sdk-filogic"
          SDK_FOLDER="openwrt-sdk-24.10.2-mediatek-filogic_gcc-13.3.0_musl.Linux-x86_64"

          mkdir -p "$SDK_DIR" && cd "$SDK_DIR"
          wget "$SDK_URL" -O "$SDK_TAR"
          zstd -d "$SDK_TAR" && tar -xf "${SDK_TAR%.zst}"
          echo "✅ SDK 解压完成"

      - name: 4️⃣ 编译 ${{ matrix.pkg }}
        run: |
          RUNNER_HOME="/home/runner"
          SDK_DIR="$RUNNER_HOME/openwrt-sdk-filogic"
          SDK_FOLDER="openwrt-sdk-24.10.2-mediatek-filogic_gcc-13.3.0_musl.Linux-x86_64"
          FULL_SDK_PATH="$SDK_DIR/$SDK_FOLDER"
          OUTPUT_DIR="$RUNNER_HOME/luci-build-ipk/${{ matrix.pkg }}"

          VERBOSE_FLAG=""
          if [ "${{ github.event.inputs.verbose }}" = "true" ]; then
            VERBOSE_FLAG="V=s"
          fi

          cd "$FULL_SDK_PATH"
          > feeds.conf.default
          echo 'src-git base https://github.com/openwrt/openwrt.git;openwrt-24.10' >> feeds.conf.default
          echo 'src-git packages https://github.com/openwrt/packages.git;master' >> feeds.conf.default
          echo 'src-git luci https://github.com/openwrt/luci.git;openwrt-24.10' >> feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

          mkdir -p "$OUTPUT_DIR"
          cp -r "$GITHUB_WORKSPACE/${{ matrix.pkg }}" package/
          echo "CONFIG_PACKAGE_${{ matrix.pkg }}=y" >> .config
          make defconfig
          make package/${{ matrix.pkg }}/clean $VERBOSE_FLAG || echo "⚠️ 无旧产物"
          make package/${{ matrix.pkg }}/compile $VERBOSE_FLAG -j1

          ARCH_DIR=$(find "bin/packages/" -maxdepth 1 -type d ! -name "*.ipk" ! -name "packages" | head -n1)
          IPK_PATH=$(find "$ARCH_DIR/" | grep "${{ matrix.pkg }}")
          cp -f $IPK_PATH "$OUTPUT_DIR/"

      - name: 5️⃣ 上传 IPK
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.pkg }}-ipk
          path: /home/runner/luci-build-ipk/${{ matrix.pkg }}/*.ipk
          retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: 1️⃣ 下载所有 IPK 产物
        uses: actions/download-artifact@v4
        with:
          path: /home/runner/all-ipks

      - name: 2️⃣ 设置当前时间
        run: |
          echo "BUILD_TIME=$(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S CST')" >> $GITHUB_ENV
          echo "VERSION_TAG=$(TZ='Asia/Shanghai' date '+%Y%m%d%H%M')" >> $GITHUB_ENV

      - name: 3️⃣ 生成包列表
        run: |
          PKG_NAMES=$(ls /home/runner/all-ipks | sed 's/-ipk$//' | tr '\n' ',' | sed 's/,$//')
          echo "PKG_NAMES=$PKG_NAMES" >> $GITHUB_ENV

      - name: 4️⃣ 发布到 GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "all-build-${{ env.VERSION_TAG }}"
          name: "自动编译 LuCI 应用包"
          files: /home/runner/all-ipks/**/*.ipk
          body: |
            🎉 所有包编译完成！
            包列表：${{ env.PKG_NAMES }}
            时间：${{ env.BUILD_TIME }}
