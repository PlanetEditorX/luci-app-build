#!/bin/sh /etc/rc.common

START=99
STOP=10

# 配置文件和脚本路径定义
KEEPALIVED_CONF="/etc/keepalived/keepalived.conf"
TEMPLATE_DIR="/etc/keepalived/template"
VIP_UP_SCRIPT="/etc/keepalived/vip_up.sh"
VIP_DOWN_SCRIPT="/etc/keepalived/vip_down.sh"
WATCHDOG_SCRIPT="/etc/keepalived/failover_watchdog.sh"

# 初始化配置文件（确保所有必要的节和选项存在）
init_config() {
    local CONF="/etc/config/keepalived-ha"
    local section_exists

    # 确保配置文件存在
    [ -f "$CONF" ] || touch "$CONF"

    # 检查并添加general节
    section_exists=$(uci -q get keepalived-ha.general)
    if [ -z "$section_exists" ]; then
        uci set keepalived-ha.general=general
        uci set keepalived-ha.general.role='main'  # 默认角色
        uci set keepalived-ha.general.vip='192.168.1.5'
        uci set keepalived-ha.general.interface='br-lan'
        uci set keepalived-ha.general.check_method='ping'
        uci set keepalived-ha.general.vrid='51'
        uci set keepalived-ha.general.advanced_mode='0'
        uci set keepalived-ha.general.preempt='true'
        uci set keepalived-ha.general.control_openclash='1'
    else
        # 确保general节的所有必要选项存在
        uci -q get keepalived-ha.general.role || uci set keepalived-ha.general.role='main'
        uci -q get keepalived-ha.general.vip || uci set keepalived-ha.general.vip='192.168.1.5'
        uci -q get keepalived-ha.general.interface || uci set keepalived-ha.general.interface='br-lan'
        uci -q get keepalived-ha.general.check_method || uci set keepalived-ha.general.check_method='ping'
        uci -q get keepalived-ha.general.vrid || uci set keepalived-ha.general.vrid='51'
        uci -q get keepalived-ha.general.advanced_mode || uci set keepalived-ha.general.advanced_mode='0'
        uci -q get keepalived-ha.general.preempt || uci set keepalived-ha.general.preempt='true'
        uci -q get keepalived-ha.general.control_openclash || uci set keepalived-ha.general.control_openclash='1'
    fi

    # 检查并添加main节（主路由配置）
    section_exists=$(uci -q get keepalived-ha.main)
    if [ -z "$section_exists" ]; then
        uci set keepalived-ha.main=main
        uci set keepalived-ha.main.peer_ip='192.168.1.3'
        uci set keepalived-ha.main.priority='50'
        uci set keepalived-ha.main.fail_threshold='3'
        uci set keepalived-ha.main.recover_threshold='2'
        uci set keepalived-ha.main.check_interval='5'
    else
        # 确保main节的所有必要选项存在
        uci -q get keepalived-ha.main.peer_ip || uci set keepalived-ha.main.peer_ip='192.168.1.3'
        uci -q get keepalived-ha.main.priority || uci set keepalived-ha.main.priority='50'
        uci -q get keepalived-ha.main.fail_threshold || uci set keepalived-ha.main.fail_threshold='3'
        uci -q get keepalived-ha.main.recover_threshold || uci set keepalived-ha.main.recover_threshold='2'
        uci -q get keepalived-ha.main.check_interval || uci set keepalived-ha.main.check_interval='5'
    fi

    # 检查并添加peer节（从路由配置）
    section_exists=$(uci -q get keepalived-ha.peer)
    if [ -z "$section_exists" ]; then
        uci set keepalived-ha.peer=peer
        uci set keepalived-ha.peer.main_ip='192.168.1.2'
        uci set keepalived-ha.peer.priority='100'
    else
        # 确保peer节的所有必要选项存在
        uci -q get keepalived-ha.peer.main_ip || uci set keepalived-ha.peer.main_ip='192.168.1.2'
        uci -q get keepalived-ha.peer.priority || uci set keepalived-ha.peer.priority='100'
    fi

    # 只有在有修改时才提交，避免不必要的配置变动
    if uci -q changes keepalived-ha; then
        uci commit keepalived-ha
    fi

    # 在 init.d/keepalived-ha 中添加
    if ! grep -q "net.ipv4.ip_nonlocal_bind=1" /etc/sysctl.conf; then
        echo "net.ipv4.ip_nonlocal_bind=1" >> /etc/sysctl.conf
        sysctl -p >/dev/null 2>&1
        logger -t keepalived-ha "已设置 ip_nonlocal_bind 参数"
    fi
}

# 读取UCI配置并替换所有占位符
replace_placeholders() {
    # 读取基础配置
    local ROLE=$(uci get keepalived-ha.general.role)
    local VIP=$(uci get keepalived-ha.general.vip)
    local INTERFACE=$(uci get keepalived-ha.general.interface)
    local VRID=$(uci get keepalived-ha.general.vrid)
    local PREEMPT=$(uci get keepalived-ha.general.preempt)

    # 根据角色读取对应参数
    if [ "$ROLE" = "main" ]; then
        local PEER_IP=$(uci get keepalived-ha.main.peer_ip)
        local PRIORITY=$(uci get keepalived-ha.main.priority)
        local FAIL_THRESHOLD=$(uci get keepalived-ha.main.fail_threshold)
        local RECOVER_THRESHOLD=$(uci get keepalived-ha.main.recover_threshold)
        local CHECK_INTERVAL=$(uci get keepalived-ha.main.check_interval)
        local TEMPLATE="$TEMPLATE_DIR/keepalived_main.conf"
    else
        local PEER_IP=$(uci get keepalived-ha.peer.main_ip)
        local PRIORITY=$(uci get keepalived-ha.peer.priority)
        local FAIL_THRESHOLD=$(uci get keepalived-ha.main.fail_threshold)  # 复用主路由的阈值（或按需调整）
        local RECOVER_THRESHOLD=$(uci get keepalived-ha.main.recover_threshold)
        local CHECK_INTERVAL=$(uci get keepalived-ha.main.check_interval)
        local TEMPLATE="$TEMPLATE_DIR/keepalived_peer.conf"
    fi

    # 替换VIP绑定/解绑脚本中的占位符
    sed -i "s|@VIP@|$VIP|g; s|@INTERFACE@|$INTERFACE|g" "$VIP_UP_SCRIPT" "$VIP_DOWN_SCRIPT"

    # 替换监控脚本中的占位符
    sed -i "s|@VIP@|$VIP|g; s|@INTERFACE@|$INTERFACE|g; s|@PEER_IP@|$PEER_IP|g; \
            s|@FAIL_THRESHOLD@|$FAIL_THRESHOLD|g; s|@RECOVER_THRESHOLD@|$RECOVER_THRESHOLD|g; \
            s|@CHECK_INTERVAL@|$CHECK_INTERVAL|g" "$WATCHDOG_SCRIPT"

    # 生成keepalived主配置文件（从模板替换）
    sed "s|@VIP@|$VIP|g; s|@INTERFACE@|$INTERFACE|g; s|@VRID@|$VRID|g; \
        s|@PRIORITY@|$PRIORITY|g; s|@PREEMPT@|$PREEMPT|g" "$TEMPLATE" > "$KEEPALIVED_CONF"
}

start() {
    init_config  # 确保配置完整
    replace_placeholders  # 替换所有占位符

    # 启动keepalived服务和监控脚本
    echo "Starting keepalived-ha service..."
    /etc/init.d/keepalived start  # 启动keepalived主服务
    if ! pgrep -f "failover_watchdog.sh" >/dev/null; then
        "$WATCHDOG_SCRIPT" &  # 启动监控脚本
    fi
}

stop() {
    # 停止服务和脚本
    echo "Stopping keepalived-ha service..."
    /etc/init.d/keepalived stop  # 停止keepalived主服务
    pkill -f "failover_watchdog.sh"  # 停止监控脚本
}

restart() {
    stop
    start
}